<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ks47team01.user.mapper.FarmingPlanMapper">

	<resultMap type="FarmingPlan" id="farmingPlanResultMap">
		<id column="farmer_farming_plan_code" property="farmerFarmingPlanCode"/>
		<result column="urbanfarmer_id" property="urbanfarmerId"/>
		<result column="urbanfarm_hub_crew_id" property="urbanfarmHubCrewId"/>
		<result column="crops_name_code" property="cropsNameCode"/>
		<result column="farmer_farming_plan_nickname" property="farmerFarmingPlanNickname"/>
		<result column="crops_name" property="cropsName"/>
		<result column="crops_growing_info_code" property="cropsGrowingInfoCode"/>
		<result column="urban_kit_code" property="urbanKitCode"/>
		<result column="urban_kit_name" property="urbanKitName"/>
		<result column="farmer_farming_plan_reg_date" property="farmerFarmingPlanRegDate"/>
		<result column="farmer_farming_plan_start_date" property="farmerFarmingPlanStartDate"/>
		<result column="farmer_farming_plan_end_date" property="farmerFarmingPlanEndDate"/>
		<result column="farmer_farming_plan_status" property="farmerFarmingPlanStatus"/>
		<result column="few_days" property="fewDays"/>
	</resultMap>
	
	<resultMap type="FarmingPlanLargeCate" id="farmingPlanLargeCateResultMap">
		<id column="farming_plan_large_cate_code" property="farmingPlanLargeCateCode"/>
		<result column="urbanfarm_admin_id" property="urbanfarmAdminId"/>
		<result column="crops_name_code" property="cropsNameCode"/>
		<result column="crops_name" property="cropsName"/>
		<result column="crops_growing_info_code" property="cropsGrowingInfoCode"/>
		<result column="farming_plan_large_cate_title" property="farmingPlanLargeCateTitle"/>
		<result column="farming_plan_large_cate_content" property="farmingPlanLargeCateContent"/>
		<result column="farming_plan_large_cate_sortation" property="farmingPlanLargeCateSortation"/>
		<result column="farming_plan_large_cate_reqired_period" property="farmingPlanLargeCateReqiredPeriod"/>
		<result column="farming_plan_large_cate_reg_date" property="farmingPlanLargeCateRegDate"/>
		<result column="urban_kit_code" property="urbanKitCode"/>
	</resultMap>
	
	<resultMap type="FarmingDetailPlan" id="farmingDetailPlanResultMap">
		<id column="farmer_farming_detail_plan_code" property="farmerFarmingDetailPlanCode"/>
		<result column="urbanfarmer_id" property="urbanfamerId"/>	
		<result column="farmer_farming_plan_code" property="farmerFarmingPlanCode"/>	
		<result column="crops_name_code" property="cropsNameCode"/>	
		<result column="crops_name" property="cropsName"/>	
		<result column="urban_kit_code" property="urbanKitCode"/>	
		<result column="crops_growing_info_code" property="cropsGrowingInfoCode"/>	
		<result column="farming_plan_large_cate_code" property="farmingPlanLargeCateCode"/>	
		<result column="farming_plan_small_cate_code" property="farmingPlanSmallCateCode"/>	
		<result column="farmer_farming_detail_plan_title" property="farmerFarmingDetailPlanTitle"/>	
		<result column="farmer_farming_detail_plan_content" property="farmerFarmingDetailPlanContent"/>	
		<result column="farmer_farming_detail_plan_sortation" property="farmerFarmingDetailPlanSortation"/>	
		<result column="farmer_farming_detail_plan_reg_date" property="farmerFarmingDetailPlanRegDate"/>	
		<result column="farmer_farming_detail_plan_status" property="farmerFarmingDetailPlanStatus"/>
		
		<result column="farming_plan_small_cate_title" property="farmerFarmingDetailPlanTitle"/>	
		<result column="farming_plan_small_cate_content" property="farmerFarmingDetailPlanContent"/>	
		<result column="farming_plan_small_cate_sortation" property="farmerFarmingDetailPlanSortation"/>	
	</resultMap>
	
	
	<insert id="insertPlanAction" parameterType="java.util.List">
		INSERT INTO farming_detail_plan_action
			(
			farming_detail_plan_action_code,
			urbanfarmer_id, 
			farmer_farming_plan_code, 
			farmer_farming_detail_plan_code, 
			farming_detail_plan_action_content, 
			crops_growing_info_code, 
			farming_plan_large_cate_code, 
			farming_detail_plan_action_reg_date
			)
		VALUES
		<foreach collection="list" item="item" separator=",">
			(
			#{item.FarmingDetailPlanActionCode},
			#{item.UrbanfarmerId}, 
			#{item.FarmerFarmingPlanCode}, 
			#{item.FarmerFarmingDetailPlanCode}, 
			#{item.FarmingDetailPlanActionContent}, 
			#{item.CropsGrowingInfoCode}, 
			#{item.FarmingPlanLargeCateCode}, 
			NOW()
			)
	</foreach> 
			
	</insert>
	
	
	<select id="getDetailPlanByCode" parameterType="String" resultMap="farmingDetailPlanResultMap">
		/* detailPlanCode로 정보 한줄 조회 */
		SELECT
			*
		FROM
			farmer_farming_detail_plan
		WHERE
			farmer_farming_detail_plan_code = #{farmerFarmingDetailPlanCode};
	</select>
	
	<select id="getTodayPlan" parameterType="Map" resultMap="farmingDetailPlanResultMap">
		SELECT
		*
		FROM
			(
			SELECT
				d.*,
				RANK() OVER (ORDER BY l.farming_plan_large_cate_sortation,d.farmer_farming_detail_plan_sortation) AS ranking
			FROM
				farmer_farming_detail_plan AS d
				INNER JOIN
				farming_plan_large_cate AS l
				ON d.farming_plan_large_cate_code = l.farming_plan_large_cate_code
			WHERE
				d.farmer_farming_plan_code = #{farmingPlanCode}
			) AS t
		WHERE
			ranking = #{fewDays}
	</select>
	
	<update id="updateCrops" parameterType="FarmingPlan">
		/* 작물수정 */
		UPDATE farmer_farming_plan
			<set>
				<if test="cropsNameCode != null">
					crops_name_code=#{cropsNameCode},				
				</if>
				<if test="farmerFarmingPlanNickname !=null">
					farmer_farming_plan_nickname=#{farmerFarmingPlanNickname},
				</if>
				<if test="cropsName !=null">
					crops_name=#{cropsName},		
				</if>
				<choose>
					<when test="urbanKitCode !=null and urbanKitCode !=''">
						urban_kit_code=#{urbanKitCode}
					</when>
					<otherwise>
						urban_kit_code = NULL
					</otherwise>
				</choose>
			</set>
			WHERE farmer_farming_plan_code= #{farmerFarmingPlanCode}
	</update>
	
	
	<select id="getFarmingPlanSmallCateListByLargeCateCode" parameterType="Map" resultMap="farmingDetailPlanResultMap">
		/* farmerFarmingPlanCode,farmingPlanLargeCateCode별 smallCateList */
		SELECT
			farmer_farming_detail_plan_code,
			farmer_farming_detail_plan_title,
			farmer_farming_detail_plan_content,
			farmer_farming_detail_plan_sortation,
			farmer_farming_detail_plan_status
		FROM
			farmer_farming_detail_plan
		WHERE
			farming_plan_large_cate_code = #{farmingPlanLargeCateCode}
			AND 
			farmer_farming_plan_code = #{farmerFarmingPlanCode}
		ORDER BY
			farmer_farming_detail_plan_sortation
	</select>
	
	<delete id="deleteFarmingDetailPlanActionByPlanCode" parameterType="String">
		/* farmerFarmingPlanCode별 FarmingDetailPlanAction 삭제 */
		DELETE
		FROM
			farming_detail_plan_action
		WHERE
			farmer_farming_plan_code = #{farmerFarmingPlanCode};
	</delete>
	
	<delete id="deleteFarmerFarmingDetailPlanByPlanCode" parameterType="String">
		/* farmerFarmingPlanCode별 FarmerFarmingDetailPlan 삭제 */
		DELETE
		FROM
			farmer_farming_detail_plan
		WHERE
			farmer_farming_plan_code = #{farmerFarmingPlanCode};
	</delete>
	
	<delete id="deleteFarmerSaleReservationToHubByPlanCode" parameterType="String">
		/* farmerFarmingPlanCode별 deleteFarmerSaleReservationToHub 삭제 */
		DELETE
		FROM
			famer_sale_reservation_to_hub
		WHERE
			farmer_farming_plan_code = #{farmerFarmingPlanCode};
	</delete>
	
	<delete id="deleteFarmerFarmingPlanByPlanCode" parameterType="String">
		/* farmerFarmingPlanCode별 FarmerFarmingPlan 삭제 */
		DELETE
		FROM
			farmer_farming_plan
		WHERE
			farmer_farming_plan_code = #{farmerFarmingPlanCode};
	</delete>
	
	<update id="startPlan" parameterType="map">
		/* 농사 시작 */
		<selectKey keyColumn="crops_name_code" keyProperty="cropsNameCode" resultType="String" order="BEFORE">
			SELECT
				crops_name_code
			FROM
				farmer_farming_plan
			WHERE
				farmer_farming_plan_code = #{farmerFarmingPlanCode};
		</selectKey>
		
		UPDATE farmer_farming_plan
			SET
				farmer_farming_plan_start_date=NOW(),
				farmer_farming_plan_end_date=DATE_ADD(NOW(),INTERVAL(
																		SELECT
																			crops_growing_date
																		FROM
																			crops_growing_info
																		WHERE
																			crops_name_code = #{cropsNameCode}
																	) DAY),
				farmer_farming_plan_status='진행중'
			WHERE farmer_farming_plan_code=#{farmerFarmingPlanCode};
	</update>
	
	<select id="getCropsInfo" parameterType="Map" resultType="Map">
		/* 작물하나 정보 */
		SELECT
			p.crops_name AS cropsName,
			p.farmer_farming_plan_nickname AS farmerFarmingPlanNickname,
			k.urban_kit_name AS urbanKitName,
			i.crops_growing_date AS cropsGrowingDate
		FROM
			farmer_farming_plan AS p
			LEFT JOIN
			urban_kit AS k
			ON p.urban_kit_code = k.urban_kit_code
			INNER JOIN
			crops_growing_info AS i
			ON p.crops_name_code = i.crops_name_code
		WHERE
			p.farmer_farming_plan_code = #{farmerFarmingPlanCode}
	</select>
	
	<select id="autoIncreaseCode" resultType="String" parameterType="String">
		<![CDATA[
		SELECT
			CASE
				WHEN COUNT(1) < 1 
				THEN '${tableName}_1'
			ELSE	
				CONCAT('${tableName}_',MAX(CAST(SUBSTRING_INDEX(${tableName}_code,'_',-1) AS UNSIGNED))+1)
			END AS increase_code
		FROM
			${tableName}
		]]>
	</select>
	
	<insert id="addPlan" parameterType="map">
		/* 사용자별 작물별 계획등록 */
		<selectKey keyColumn="crops_growing_info_code" keyProperty="cropsGrowingInfoCode" order="BEFORE" resultType="String">
			SELECT
				crops_growing_info_code
			FROM
				crops_growing_info
			WHERE
				crops_name_code = #{cropsNameCode}
		</selectKey>
		INSERT INTO farmer_farming_detail_plan
		(
			farmer_farming_detail_plan_code, 
			urbanfarmer_id, 
			farmer_farming_plan_code, 
			crops_name_code, 
			crops_name,
			<if test="urbanKitCode !=null and urbanKitCode != ''">
				urban_kit_code,
			</if>
			crops_growing_info_code, 
			farming_plan_large_cate_code, 
			farming_plan_small_cate_code, 
			farmer_farming_detail_plan_title, 
			farmer_farming_detail_plan_content, 
			farmer_farming_detail_plan_sortation, 
			farmer_farming_detail_plan_reg_date, 
			farmer_farming_detail_plan_status
		)
		SELECT
		<![CDATA[
			CONCAT('farmer_farming_detail_plan_', @increaseCd := @increaseCd +1) AS farmer_farming_detail_plan_code
			,#{urbanfarmerId} AS urbanfarmer_id
			,#{farmerFarmingPlanCode} AS farmer_farming_plan_code
			,s.crops_name_code
			,s.crops_name
		]]>
			<if test="urbanKitCode !=null and urbanKitCode != ''">
			,#{urbanKitCode}
			</if>
		<![CDATA[
			,#{cropsGrowingInfoCode} AS crops_growing_info_code
			,s.farming_plan_large_cate_code 
			,s.farming_plan_small_cate_code
			,s.farming_plan_small_cate_title AS farmer_farming_detail_plan_title
			,s.farming_plan_small_cate_content AS farmer_farming_detail_plan_content
			,s.farming_plan_small_cate_sortation AS farmer_farming_detail_plan_sortation
			,NOW()
			,'실행전'
		FROM
			farming_plan_small_cate AS s
			INNER JOIN
			farming_plan_large_cate AS l
			USING(farming_plan_large_cate_code),
			(SELECT
				CASE
					WHEN COUNT(1) < 1 
					THEN @increaseCd := 0
				ELSE	
					@increaseCd := MAX(CAST(SUBSTRING_INDEX(farmer_farming_detail_plan_code,'_',-1) AS UNSIGNED))
				END AS increase_code
			FROM
				farmer_farming_detail_plan) AS cd
		]]>
		<where>
			s.crops_name_code = #{cropsNameCode}
			<choose>
				<when test="urbanKitCode !=null and urbanKitCode != ''">
					AND l.urban_kit_code = #{urbanKitCode};				
				</when>
				<otherwise>
					AND l.urban_kit_code IS NULL;
				</otherwise>
			</choose>
		</where>
	</insert>
	
	<select id="getFarmingLargeCateByCode" parameterType="String" resultMap="farmingPlanLargeCateResultMap">
		/* 농사 계획코드별 대분류 가져오기 */	
		SELECT
			p.farming_plan_large_cate_code,
			l.farming_plan_large_cate_title,
			l.farming_plan_large_cate_content
		FROM
			farmer_farming_detail_plan AS p
			INNER JOIN
			farming_plan_large_cate AS l
			USING(farming_plan_large_cate_code)
		WHERE
			p.farmer_farming_plan_code = #{farmerFarmingPlanCode}
		GROUP BY 
			p.farming_plan_large_cate_code
		ORDER BY 
			l.farming_plan_large_cate_sortation
	</select>
	
	<select id="getFarmingPlanByCode" parameterType="String" resultMap="farmingPlanResultMap">
		/* 코드별 작농계획 */
		SELECT
			p.*,
			c.urban_kit_name,
			DATEDIFF(NOW(),p.farmer_farming_plan_start_date) + 1 AS few_days
		FROM
			farmer_farming_plan AS p
			LEFT JOIN
			urban_kit AS c
			ON p.urban_kit_code = c.urban_kit_code
		WHERE
			farmer_farming_plan_code = #{farmerFarmingPlanCode}
	</select>
	
	<select id="getMinManagementUser" resultType="map">
		/* 담당자수가 가장 적은 crew 반환 */
		SELECT
			c.urbanfarm_hub_crew_id AS min_crew_id,
			COUNT(f.urbanfarm_hub_crew_id) AS num
		FROM
			urbanfarm_hub_crew AS c
			LEFT JOIN
			farmer_farming_plan AS f
			ON c.urbanfarm_hub_crew_id = f.urbanfarm_hub_crew_id
		GROUP BY c.urbanfarm_hub_crew_id
		ORDER BY num
		LIMIT 1;
	</select>
	
	
	<select id="getFarmingPlanListById" resultMap="farmingPlanResultMap" parameterType="String">
		/* 사용자별 계획 리스트 */
		SELECT
			p.*,
			DATEDIFF(NOW(),p.farmer_farming_plan_start_date) + 1 AS few_days
		FROM
			farmer_farming_plan AS p
			INNER JOIN
			crops_growing_info AS i
			ON p.crops_name_code = i.crops_name_code
		WHERE
			p.urbanfarmer_id = #{userId};
	</select>
	
	<insert id="addCrops" parameterType="Map">
		/* 농사 예정 작물 등록 */
		<selectKey keyColumn="crops_name,crops_growing_info_code" keyProperty="cropsName,cropsGrowingInfoCode" resultType="Map" order="BEFORE">
			SELECT
				crops_name,
				crops_growing_info_code
			FROM
				crops_growing_info
			WHERE
				crops_name_code = #{cropsNameCode}
		</selectKey>
		INSERT INTO farmer_farming_plan
			(farmer_farming_plan_code,
			 urbanfarmer_id, 
			 urbanfarm_hub_crew_id, 
			 crops_name_code, 
			 crops_name, 
			 crops_growing_info_code,
			 <if test="urbanKitCode !=null and urbanKitCode != ''">
				 urban_kit_code, 			 
			 </if> 
			 <if test="farmerFarmingPlanNickname !=null and farmerFarmingPlanNickname != ''">
				 farmer_farming_plan_nickname, 			 
			 </if> 
			 farmer_farming_plan_reg_date,
			 farmer_farming_plan_status)
		VALUES 
			(#{farmerFarmingPlanCode},
			 #{urbanfarmerId}, 
			 #{urbanfarmHubCrewId}, 
			 #{cropsNameCode}, 
			 #{cropsName}, 
			 #{cropsGrowingInfoCode},
			 <if test="urbanKitCode !=null and urbanKitCode != ''">
				 #{urbanKitCode}, 			 
			 </if>
			 <if test="farmerFarmingPlanNickname !=null and farmerFarmingPlanNickname != ''">
				 #{farmerFarmingPlanNickname}, 			 
			 </if>  
			 NOW(), 
			 '시작전')
	</insert>
</mapper>